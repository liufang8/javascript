
基本类型和引用类型：
	
	基本类型：
		是简单的数据段，五种基本数据类型（undefined null Boolean Number 

	引用类型;
		的值是保存在内存中的对象。在操作对象是实际是操作对象的引用，不是实际对象


	不同:

		引用类型可以动态添加属性和方法，基本类型不能添加属性和方法。
		赋值操作引用变赋值的是对象的引用地址，基本变量是新的变量值
		参数传递引用变量同赋值，基本变量同赋值


	判断基本类型用typeof
	判断引用类型用instanceof 
		var colors = ['red','blue'];  
		colors instanceof Array;  //true
		colors instanceof Object  //true  //所有对象都是object实例



执行环境和作用域：
	
	执行环境（excution context）定义了变量和函数有权访问的其他数据，决定了他们的行为。
	每个函数都有自己的执行环境，当执行到一个函数是，该函数就变成执行环境。全局执行环境是最外围的执行环境
	宿主不同执行环境也不同，在web浏览器中是window. 关闭浏览器或者不关闭网页，全局执行环境才会被销毁。

	作用域链：变量访问的当前环境->包含环境->全局执行环境

	没有块级作用域：作用域内的变量默认被提到最前端



垃圾回收：具有自动垃圾回收机制。
	
	
	回收策略：

		清除标记:
			垃圾回收器运行将内存中所有的变量加上标记，然后去除环境中的变量和环境变量引用的变量的标记。
		    垃圾回收器销毁那些带有标记的值和收回他们占用的的内存空间。

	管理内存：确保占用更少的内存，获取更好的性能，在全局变量不使用的时候解除引用。 
			var myGlobal  = null, 以便让垃圾回收期下次运行时收回占用的空间。		    



